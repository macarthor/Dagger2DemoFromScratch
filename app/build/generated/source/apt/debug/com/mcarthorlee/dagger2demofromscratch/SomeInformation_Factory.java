// Generated by Dagger (https://google.github.io/dagger).
package com.mcarthorlee.dagger2demofromscratch;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class SomeInformation_Factory implements Factory<SomeInformation> {
  private final Provider<OtherInformation> mOtherInformationProvider;

  public SomeInformation_Factory(Provider<OtherInformation> mOtherInformationProvider) {
    this.mOtherInformationProvider = mOtherInformationProvider;
  }

  @Override
  public SomeInformation get() {
    SomeInformation instance = new SomeInformation();
    SomeInformation_MembersInjector.injectMOtherInformation(
        instance, mOtherInformationProvider.get());
    return instance;
  }

  public static SomeInformation_Factory create(
      Provider<OtherInformation> mOtherInformationProvider) {
    return new SomeInformation_Factory(mOtherInformationProvider);
  }

  public static SomeInformation newSomeInformation() {
    return new SomeInformation();
  }
}
