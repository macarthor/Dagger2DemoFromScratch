// Generated by Dagger (https://google.github.io/dagger).
package com.mcarthorlee.dagger2demofromscratch;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class SomeInformationActivity_MembersInjector
    implements MembersInjector<SomeInformationActivity> {
  private final Provider<CoffeeMaker> mCoffeeMakerProvider;

  public SomeInformationActivity_MembersInjector(Provider<CoffeeMaker> mCoffeeMakerProvider) {
    this.mCoffeeMakerProvider = mCoffeeMakerProvider;
  }

  public static MembersInjector<SomeInformationActivity> create(
      Provider<CoffeeMaker> mCoffeeMakerProvider) {
    return new SomeInformationActivity_MembersInjector(mCoffeeMakerProvider);
  }

  @Override
  public void injectMembers(SomeInformationActivity instance) {
    injectMCoffeeMaker(instance, mCoffeeMakerProvider.get());
  }

  public static void injectMCoffeeMaker(SomeInformationActivity instance, Object mCoffeeMaker) {
    instance.mCoffeeMaker = (CoffeeMaker) mCoffeeMaker;
  }
}
